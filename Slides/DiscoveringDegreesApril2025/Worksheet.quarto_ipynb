{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "---\n",
        "title: \"Discovering Degrees 2025\"\n",
        "format: \n",
        "    html:\n",
        "        number-sections: true\n",
        "    pdf:\n",
        "        documentclass: article\n",
        "        number-sections: true\n",
        "        header-includes:\n",
        "            - \\usepackage{fancyhdr} % For custom headers\n",
        "            - \\usepackage{graphicx} % For including images\n",
        "            - \\pagestyle{fancy}\n",
        "            - \\fancyhf{} % Clear default headers and footers\n",
        "            - \\fancyhead[L]{\\includegraphics[width=2cm]{UoD_logo_RGB.png}} \n",
        "            - \\fancyhead[R]{\\thepage} \n",
        "            - \\renewcommand{\\headrulewidth}{0.4pt} \n",
        "            - \\fancypagestyle{titlepage}{\n",
        "                \\fancyhf{}\n",
        "                \\fancyhead[L]{\\includegraphics[width=3cm]{UoD_logo_RGB.png}}\n",
        "                \\fancyhead[R]{\\thepage}\n",
        "                }\n",
        "         \n",
        "\n",
        "\n",
        "\n",
        "---\n",
        "\n",
        "\n",
        "\n",
        "\\thispagestyle{titlepage}\n",
        "\n",
        "This worksheet is accompanied by web apps that can be found here (https://dundeemath.github.io/Admissions/).\n",
        "\n",
        "\n",
        "## Estimating $\\pi$\n",
        "\n",
        "Consider @fig-circ.\n",
        "The ratio of the area of the circle to that of the circumscribed square is\n",
        "\n",
        "$$\n",
        "\\frac{\\textrm{Area circle}}{\\textrm{Area square}}=\\frac{\\pi}{4}.\n",
        "$$\n",
        "\n",
        "Suppose we uniformly sample points from within the square. The probability of a point landing in the circle is proportional to the relative area of the circle, i.e.\n",
        "$$\n",
        "\\frac{\\pi}{4}.\n",
        "$$\n",
        "\n",
        "Hence we can estimate $\\pi$ by counting the number of uniformly sampled points that fall within the circle.\n",
        "\n",
        "To sample the points:\n",
        "\n",
        "1. Hold a small number of rice grains above the circle in @fig-circ and drop onto the page. Vary dropping height to ensure the rice grains land approximately uniformly in the square. \n",
        "2. \n",
        "    (i) Drop rice grains on to the square.\n",
        "    (ii) Count the total number of rice grains that fall inside the square, $N_S$, and the circle, $N_C$.\n",
        "    (iii) Input the data into @tbl-circ and compute the quantity\n",
        "    $$\n",
        "    \\hat{\\pi}=4\\frac{N_C}{N_S}.\n",
        "    $$\n",
        "    (iv)  Repeat Steps (i)-(iii).\n",
        "5. Compute the mean of the samples.\n",
        "6. Explore computationally using the 'Estimating $\\pi$' app.\n",
        "\n",
        "\n",
        "\\newpage"
      ],
      "id": "07fdd881"
    },
    {
      "cell_type": "code",
      "metadata": {
        "fig-width": 3
      },
      "source": [
        "#| echo: false\n",
        "#| label: fig-circ\n",
        "#| fig-pos: h\n",
        "\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "R=1.0\n",
        "theta=np.linspace(0,2*np.pi,1000)\n",
        "fig,ax=plt.subplots()\n",
        "ax.plot(R*np.cos(theta),R*np.sin(theta),'r')\n",
        "ax.set_xlabel('$x$')\n",
        "ax.set_ylabel('$y$')\n",
        "ax.set_aspect('equal')\n",
        "ax.axis('square')\n",
        "\n",
        "ax.set_xlim([-1.0,1.0])\n",
        "ax.set_ylim([-1.0,1.0])\n",
        "\n",
        "plt.show()"
      ],
      "id": "fig-circ",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "| Iteration| $N_S$ | $N_C$ | $\\hat{\\pi}=4N_C/N_S$ |\n",
        "| ---|---------|-----|------|\n",
        "| 1 |       |    |     |  \n",
        "| 2 |       |    |     |  \n",
        "|3  |       |    |     |  \n",
        "|4 |       |    |     |  \n",
        "|5 |       |    |     |  \n",
        "|6 |       |    |     |  \n",
        "| ---|---------|-----|------|\n",
        "| Mean | N/A | N/A  | |\n",
        "\n",
        ": A table to record counts. {#tbl-circ .striped .hover }\n",
        "\n",
        "\n",
        "\\newpage \n",
        "\n",
        "## Estimating an integral\n",
        "\n",
        "Consider @fig-int.\n",
        "Here we have plotted the function \n",
        "$$\n",
        "y=x^2, \\quad x \\in [0,1].\n",
        "$$\n",
        "\n",
        "The shaded 'area under the curve' can be represented by the integral\n",
        "$$\n",
        "I=\\int_0^1 x^2 \\textrm{d}x.\n",
        "$$\n",
        "\n",
        "To estimate the integral we  again uniformly sample points from within the circumscribed square.  By counting how many points fall inside the shaded region we can estimate the integral to be\n",
        "$$\n",
        "\\hat{I}=\\textrm{Area square} \\times \\textrm{Frac points in shaded region} = 1\\times \\frac{N_R}{N_S}\n",
        "$$\n",
        "\n",
        "1. Hold a small number of rice grains above the square in @fig-int drop onto the page.\n",
        "2. Count the total number of rice grains that fall inside the square, $N_S$, and the shaded region, $N_R$.\n",
        "3. Input data into @tbl-int and compute the quantity\n",
        "$$\n",
        "\\frac{N_R}{N_S}.\n",
        "$$\n",
        "4. Repeat Steps 1-3.\n",
        "5. Compute the mean of the samples.\n",
        "6. Explore computationally using the 'Monte Carlo integration' app.\n",
        "\n",
        "\n",
        "\\newpage "
      ],
      "id": "a4450196"
    },
    {
      "cell_type": "code",
      "metadata": {
        "fig-width": 2
      },
      "source": [
        "#| echo: false\n",
        "#| label: fig-int\n",
        "#| fig-pos: h\n",
        "\n",
        "\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "R=1.0\n",
        "x=np.linspace(0,1,1000)\n",
        "fig,ax=plt.subplots()\n",
        "ax.plot(x,x**2,'r')\n",
        "ax.set_xlabel('$x$')\n",
        "ax.set_ylabel('$y$')\n",
        "ax.set_aspect('equal')\n",
        "ax.axis('square')\n",
        "\n",
        "ax.set_xlim([0.0,1.0])\n",
        "ax.set_ylim([0.0,1.0])\n",
        "\n",
        "x_fill=np.zeros((len(x)+2,2),dtype=float)\n",
        "x_fill[0:len(x),0]=x\n",
        "x_fill[0:len(x),1]=x**2\n",
        "x_fill[len(x),0]=1\n",
        "x_fill[len(x),1]=0\n",
        "x_fill[len(x)+1,0]=0\n",
        "x_fill[len(x)+1,1]=0\n",
        "ax.fill(x_fill[:,0],x_fill[:,1])\n",
        "\n",
        "\n",
        "plt.show()"
      ],
      "id": "fig-int",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "| Iteration| $N_S$ | $N_R$ | $\\hat{I}=N_R/N_S$ |\n",
        "| ---|---------|-----|------|\n",
        "| 1 |       |    |     |  \n",
        "| 2 |       |    |     |  \n",
        "|3  |       |    |     |  \n",
        "|4 |       |    |     |  \n",
        "|5 |       |    |     |  \n",
        "|6 |       |    |     |  \n",
        "| ---|---------|-----|------|\n",
        "| Mean | N/A | N/A  | |\n",
        "\n",
        ": A table to record counts. {#tbl-int .striped .hover }\n"
      ],
      "id": "8f4c676d"
    }
  ],
  "metadata": {
    "kernelspec": {
      "name": "python3",
      "language": "python",
      "display_name": "Python 3 (ipykernel)",
      "path": "/Users/pmurray/anaconda3/share/jupyter/kernels/python3"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}